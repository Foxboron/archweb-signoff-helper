#compdef signoff

local _signoff_users
_load_users(){
    _signoff_users=()
    cache="${XDG_CACHE_HOME:-$HOME/.cache}"
    _users=$(jq -r 'map(.short_signoffs) | flatten | unique_by(split(" (")[0]) | join("\n")' $cache/archweb/packages.json)
    _signoff_users=("${(@f)$(echo $_users)}")
}

local _signoff_packages
_load_all_packages(){
    _signoff_packages=()
    cache="${XDG_CACHE_HOME:-$HOME/.cache}"
    _packages=$(jq -r 'map(.pkgbase) | join("\n")' $cache/archweb/packages.json)
    _signoff_packages=("${(@f)$(echo $_packages)}")
}

_load_your_signoff_packages(){
    _signoff_packages=()
    cache="${XDG_CACHE_HOME:-$HOME/.cache}"
    config="${XDG_CONFIG_HOME:-$HOME/.config}"
    username="${ARCHWEB_USER:-$(cat $config/archweb/archweb.conf | awk -F'[/=]' '/Username/{ printf $2 }')}"
    _packages=$(jq -r --arg username $username '.[] | select(.short_signoffs|contains([$username])) | .pkgbase' $cache/archweb/packages.json)
    _signoff_packages=("${(@f)$(echo $_packages)}")
}

_load_no_signoff_packages(){
    _signoff_packages=()
    cache="${XDG_CACHE_HOME:-$HOME/.cache}"
    config="${XDG_CONFIG_HOME:-$HOME/.config}"
    username="${ARCHWEB_USER:-$(cat $config/archweb/archweb.conf | awk -F'[/=]' '/Username/{ printf $2 }')}"
    _packages=$(jq -r --arg username $username '.[] | select(.short_signoffs|contains([$username])|not) | .pkgbase' $cache/archweb/packages.json)
    _signoff_packages=("${(@f)$(echo $_packages)}")
}

_signoff_filter_opts=(
    '-u[user]'
    '-f[Yes,No]'
)

_signoff_actions=(
    'approve:[signoff package]'
    'revoke:[revoke signoff]'
    'approvals:[list approvals of packages]'
    'note:[list package notes]'
    'signoffs:[list sign offs on package]'
)

_signoff_filter_yes_no=(
    'No'
    'Yes'
)

# main dispatcher
_signoff() {
  local curcontext="$curcontext" state line
  typeset -A opt_args

  _arguments \
    ':action:->actions' \
    '-f[Yes,No]:flag:->filter_flag'\
    '-u[user]:flag:->user_filter'\
    '*::arguments:->action-arguments'
  case $state in
    actions)
      _describe action _signoff_actions
    ;;
    filter_flag)
      _describe action _signoff_filter_yes_no
    ;;
    user_filter)
      _load_users
      _describe action _signoff_users
    ;;
    action-arguments)
      case ${words[1]} in
        approvals) _arguments -s -w : \
                "$_signoff_filter_opts[@]" ;;
        note) _load_packages
              _describe action _signoff_packages ;;
        signoffs) _load_packages
                  _describe action _signoff_packages ;;
        approve) _load_no_signoff_packages
                 _describe action _signoff_packages ;;
        revoke) _load_your_signoff_packages
                _describe action _signoff_packages ;;
        *)
            _default
            return
        ;;
      esac
    ;;
  esac
}

_signoff "$@"
